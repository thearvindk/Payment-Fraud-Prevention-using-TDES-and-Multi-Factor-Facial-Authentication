{
  "name": "face-recognition-with-liveness-web-login",
  "version": "1.0.0",
  "description": "&nbsp;&nbsp;&nbsp;&nbsp;We have implemented Flask web application login page including face verification (1-to-1 to verify whether the person who is logging in is really that person), for security purpose, with liveness detection mechanism (to check whether the person detected on the camera is a REAL person or FAKE (eg. image, video, etc. of that person)), for Anti-Spoofting (Others pretending to be the person), built with Convolutional Neural Network. After the login page, we also provided a webpage placeholder for future use.   \r &nbsp;&nbsp;&nbsp;&nbsp;**Note:** This project is not an end-to-end solution because it doesn't work in a client-server manner (no use of WebRTC) which means that end users need to have python and all libraries installed (absolutely not practical in a real-world solution). The project meant to work as a starting point or to provide the idea of how all components work together. However, you can check out *Related repos* section below. We have provided some links to extended repos based on this project which happened to make it work with WebRTC.",
  "main": "App.js",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "author": "",
  "license": "ISC",
  "dependencies": {
    "body-parser": "^1.20.1",
    "crypto-js": "^4.1.1",
    "express": "^4.18.2",
    "node-rsa": "^1.1.1",
    "nodemon": "^2.0.20",
    "path": "^0.12.7"
  }
}
